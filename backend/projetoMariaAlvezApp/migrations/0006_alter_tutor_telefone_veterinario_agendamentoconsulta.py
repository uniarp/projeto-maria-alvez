# Generated by Django 4.2.16 on 2025-04-10 12:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import projetoMariaAlvezApp.models


class Migration(migrations.Migration):

    dependencies = [
        ('projetoMariaAlvezApp', '0005_auto_20250301_0715'),
    ]

    operations = [
        migrations.AlterField(
            model_name='tutor',
            name='telefone',
            field=models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?55?\\s?(\\(?\\d{2}\\)?\\s?)?\\d{8,9}|\\d{10,11}$', 'Digite um número de telefone válido no formato: +55 (DD) XXXX-XXXX, (DD) XXXX-XXXX')], verbose_name='Telefone'),
        ),
        migrations.CreateModel(
            name='Veterinario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Digite o nome completo do veterinário.', max_length=100, verbose_name='Nome completo')),
                ('cpf', models.CharField(help_text='Formato: XXX.XXX.XXX-XX', max_length=14, unique=True, validators=[django.core.validators.RegexValidator('^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$', 'CPF deve estar no formato XXX.XXX.XXX-XX.'), projetoMariaAlvezApp.models.validar_cpf], verbose_name='CPF')),
                ('telefone', models.CharField(help_text='Digite o telefone de contato. Ex: (99) 99999-9999', max_length=15, validators=[django.core.validators.RegexValidator('^\\(\\d{2}\\) \\d{4,5}-\\d{4}$', 'Telefone deve estar no formato (99) 99999-9999.')], verbose_name='Telefone')),
                ('email', models.EmailField(help_text='Digite um e-mail válido para contato.', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail')),
                ('especialidade', models.CharField(help_text='Área de atuação do veterinário.', max_length=100, verbose_name='Especialidade')),
                ('crmv', models.CharField(help_text='Registro profissional do veterinário (Ex: 12345-PR).', max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^\\d{4,6}-[A-Z]{2}$', 'CRMV deve estar no formato 12345-PR.')], verbose_name='CRMV')),
                ('data_admissao', models.DateField(help_text='Data de início das atividades na clínica.', verbose_name='Data de Admissão')),
            ],
            options={
                'verbose_name': 'Veterinário',
                'verbose_name_plural': 'Veterinários',
                'ordering': ['nome'],
                'indexes': [models.Index(fields=['cpf'], name='projetoMari_cpf_09765b_idx'), models.Index(fields=['email'], name='projetoMari_email_2b1aac_idx'), models.Index(fields=['crmv'], name='projetoMari_crmv_70970e_idx')],
            },
        ),
        migrations.CreateModel(
            name='AgendamentoConsulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('consulta', 'Consulta'), ('castracao', 'Castração'), ('emergencia', 'Emergência')], default='consulta', max_length=10)),
                ('data', models.DateField()),
                ('hora', models.TimeField()),
                ('animais', models.ManyToManyField(related_name='consultas', to='projetoMariaAlvezApp.animal')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='projetoMariaAlvezApp.tutor')),
                ('veterinario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agendamentos', to='projetoMariaAlvezApp.veterinario')),
            ],
        ),
    ]
